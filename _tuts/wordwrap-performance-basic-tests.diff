diff --git a/src/WordWrapper.php b/src/WordWrapper.php
index 784a855..16b03e2 100644
--- a/src/WordWrapper.php
+++ b/src/WordWrapper.php
@@ -5,19 +5,50 @@ namespace App;
 class WordWrapper
 {
     public function wrap(string $s, int $width): string
+    {
+        $r = '';
+        $newString = $s;
+
+        do {
+            $r .= $this->cut($newString, $width);
+            $tail = trim(substr($newString, $width));
+            if ($tail) {
+                $r .= "\n";
+            }
+
+            $newString = $tail;
+        } while($tail);
+
+        return $r;
+    }
+
+    private function cut(string $s, int $width): string
     {
         if (!$s) {
             return '';
         }
-        
+
         if (strlen($s) <= $width) {
             return $s;
         }
 
-//        $breakPoint = strrpos(substr($s, 0, $width), ' ');
-//        if ($breakPoint === false) {
-//            $breakPoint = $width;
-//        }
+        return substr($s, 0, $width);
+    }
+
+    public function wrapOld(string $s, int $width): string
+    {
+        if (!$s) {
+            return '';
+        }
+
+        if (strlen($s) <= $width) {
+            return $s;
+        }
+
+        $breakPoint = strrpos(substr($s, 0, $width), ' ');
+        if ($breakPoint === false) {
+            $breakPoint = $width;
+        }
 
         return substr($s, 0, $width) . "\n" . substr($s, $width);
     }
diff --git a/tests/WordWrapperTest.php b/tests/WordWrapperTest.php
index a2b903f..f0ccd37 100644
--- a/tests/WordWrapperTest.php
+++ b/tests/WordWrapperTest.php
@@ -24,7 +24,7 @@ class WordWrapperTest extends TestCase
             'one word' => ['x', 1, 'x'],
             'break word' => ['xx', 1, "x\nx"],
             'one word multiple break lines' => ['xxx', 1, "x\nx\nx"],
-//            'space after break line' => ['x x', 1, "x\nx"],
+            'space after break line' => ['x x', 1, "x\nx"],
 //            'width includes a space' => ['x xx', 3, "x\nxx"],
 //            'width includes a space following by another word' => ['x xx x', 3, "x\nxx\nx"],
 //            'integration' => [
