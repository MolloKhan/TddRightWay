diff --git a/src/Repository/GameResultRepository.php b/src/Repository/GameResultRepository.php
index f7949c5..f56bd6d 100644
--- a/src/Repository/GameResultRepository.php
+++ b/src/Repository/GameResultRepository.php
@@ -3,6 +3,7 @@
 namespace App\Repository;
 
 use App\Entity\GameResult;
+use App\Entity\Player;
 use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
 use Doctrine\Persistence\ManagerRegistry;
 
diff --git a/src/Repository/PlayerRepository.php b/src/Repository/PlayerRepository.php
index e324f57..b0b8989 100644
--- a/src/Repository/PlayerRepository.php
+++ b/src/Repository/PlayerRepository.php
@@ -22,7 +22,10 @@ class PlayerRepository extends ServiceEntityRepository
     public function getScoreboard(): array
     {
         return $this->createQueryBuilder('p')
+            ->addSelect('p, COUNT(gr.victory) AS score')
+            ->addGroupBy('p')
             ->join('p.gameResults', 'gr')
+            ->andWhere('gr.victory = 1')
             ->andWhere('gr.createdAt >= :dateLimit')
             ->setParameter('dateLimit', new \DateTimeImmutable('-15 days'))
             ->setMaxResults(5)
diff --git a/tests/Repository/PlayerRepositoryTest.php b/tests/Repository/PlayerRepositoryTest.php
index 9f62732..4e85dce 100644
--- a/tests/Repository/PlayerRepositoryTest.php
+++ b/tests/Repository/PlayerRepositoryTest.php
@@ -76,7 +76,21 @@ class PlayerRepositoryTest extends WebTestCase
         
         self::assertCount(1, $scoreboard);
     }
-    
+
+    public function testGetScoreBoard_calculatingPlayersScore()
+    {
+        $player = $this->createPlayerWithVictory('player1');
+        $this->createGameResult($player, false);
+
+        $this->getEntityManager()->flush();
+
+        $scoreboard = $this->repository->getScoreboard();
+
+        self::assertCount(1, $scoreboard);
+        self::assertEquals(1, $scoreboard[0]['score']);
+        self::assertSame($player, $scoreboard[0][0]);
+    }
+
     private function getEntityManager(): EntityManagerInterface
     {
         return self::getContainer()->get(EntityManagerInterface::class);
