diff --git a/src/NameInverter.php b/src/NameInverter.php
index 6bc7657..1181135 100644
--- a/src/NameInverter.php
+++ b/src/NameInverter.php
@@ -20,7 +20,12 @@ class NameInverter
             return $nameParts[0];
         }
 
-        return sprintf('%s, %s', $nameParts[1], $nameParts[0]);
+        $postNominals = '';
+        if (count($nameParts) > 2) {
+            $postNominals = $nameParts[2];
+        }
+
+        return trim(sprintf('%s, %s %s', $nameParts[1], $nameParts[0], $postNominals));
     }
 
     private function isHonorific(string $word): bool
diff --git a/tests/NameInverterTest.php b/tests/NameInverterTest.php
index fa8833c..e078f5a 100644
--- a/tests/NameInverterTest.php
+++ b/tests/NameInverterTest.php
@@ -54,6 +54,11 @@ class NameInverterTest extends TestCase
         $this->assertInvertedName('mr Diego Aguiar', 'Aguiar, Diego');
     }
 
+    public function testInvert_postNominals_stayAtEnd()
+    {
+        $this->assertInvertedName('Diego Aguiar BS.', 'Aguiar, Diego BS.');
+    }
+    
     private function assertInvertedName(string $name, string $invertedName): void
     {
         self::assertEquals($invertedName, $this->nameInverter->invert($name));
