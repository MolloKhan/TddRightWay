diff --git a/src/Repository/PlayerRepository.php b/src/Repository/PlayerRepository.php
index b0b8989..8115020 100644
--- a/src/Repository/PlayerRepository.php
+++ b/src/Repository/PlayerRepository.php
@@ -29,6 +29,7 @@ class PlayerRepository extends ServiceEntityRepository
             ->andWhere('gr.createdAt >= :dateLimit')
             ->setParameter('dateLimit', new \DateTimeImmutable('-15 days'))
             ->setMaxResults(5)
+            ->orderBy('score', 'DESC')
             ->getQuery()
             ->execute();
     }
diff --git a/tests/Repository/PlayerRepositoryTest.php b/tests/Repository/PlayerRepositoryTest.php
index 4e85dce..169c82c 100644
--- a/tests/Repository/PlayerRepositoryTest.php
+++ b/tests/Repository/PlayerRepositoryTest.php
@@ -91,6 +91,26 @@ class PlayerRepositoryTest extends WebTestCase
         self::assertSame($player, $scoreboard[0][0]);
     }
 
+    public function testGetScoreBoard_isOrderedByHighestScore()
+    {
+        $p1 = $this->createPlayerWithVictory('player1');
+
+        $p2 = $this->createPlayerWithVictory('player2');
+        $this->createGameResult($p2, true);
+        $this->createGameResult($p2, true);
+
+        $p3 = $this->createPlayerWithVictory('player3');
+        $this->createGameResult($p3, true);
+
+        $this->getEntityManager()->flush();
+
+        $scoreboard = $this->repository->getScoreboard();
+        
+        self::assertSame($p2, $scoreboard[0][0]);
+        self::assertSame($p3, $scoreboard[1][0]);
+        self::assertSame($p1, $scoreboard[2][0]);
+    }
+    
     private function getEntityManager(): EntityManagerInterface
     {
         return self::getContainer()->get(EntityManagerInterface::class);
