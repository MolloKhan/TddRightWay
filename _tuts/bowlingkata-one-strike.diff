diff --git a/src/BowlingGame.php b/src/BowlingGame.php
index 18d9ea8..99575ea 100644
--- a/src/BowlingGame.php
+++ b/src/BowlingGame.php
@@ -7,6 +7,12 @@ class BowlingGame
     private array $rolls = [];
     private int $currentRoll = 0;
 
+    public function __construct()
+    {
+//        $this->rolls = array_fill(0, 21, null);
+        $this->rolls = (new \SplFixedArray(21))->toArray();
+    }
+
     public function roll(int $pins)
     {
         $this->rolls[$this->currentRoll++] = $pins;
@@ -17,13 +23,16 @@ class BowlingGame
         $score = 0;
         $frameIndex = 0;
         for ($frame = 0; $frame < 10; $frame++) {
-            if ($this->isSpare($frameIndex)) {
+            if ($this->rolls[$frameIndex] === 10) { // strike
+                $score += 10 + $this->rolls[$frameIndex + 1] + $this->rolls[$frameIndex + 2];
+                $frameIndex++;
+            } else if ($this->isSpare($frameIndex)) {
                 $score += 10 + $this->rolls[$frameIndex + 2];
+                $frameIndex += 2;
             } else {
                 $score += $this->rolls[$frameIndex] + $this->rolls[$frameIndex + 1];
+                $frameIndex += 2;
             }
-
-            $frameIndex += 2;
         }
 
         return $score;
diff --git a/tests/BowlingGameTest.php b/tests/BowlingGameTest.php
index cfde460..c0c9bca 100644
--- a/tests/BowlingGameTest.php
+++ b/tests/BowlingGameTest.php
@@ -40,6 +40,16 @@ class BowlingGameTest extends TestCase
         self::assertEquals(16, $this->game->score());
     }
 
+    public function testOneStrike()
+    {
+        $this->game->roll(10); // strike
+        $this->game->roll(3);
+        $this->game->roll(4);
+        $this->rollMany(0, 16);
+
+        self::assertEquals(24, $this->game->score());
+    }
+
     private function rollMany(int $n, int $pins): void
     {
         for ($i = 0; $i < $n; $i++) {
